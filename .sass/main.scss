@use 'sass:list';
@use 'sass:color';
@use 'sass:math';

@function getrands($num: 1, $limit: 255)
{
    $rands: ();
    @for $i from 1 through $num
    {
        $rands: list.append($rands, math.random($limit));
    }
    @return $rands;
}

$rands: getrands(99);

@keyframes rand-colours-bw
{
    @for $i from 1 through 99
    {
        #{$i%100%}
        {
            background-color: rgba(list.nth($rands, $i), list.nth($rands, $i), list.nth($rands, $i), 0.5);
        }
    }
}

@function background-grid($thickness: 1px, $hole-size, $grid-colour: #000000, $hole-colour: #00000000)
{
    @return (linear-gradient($grid-colour $thickness, transparent 1px) right top/ $hole-size $hole-size padding-box repeat scroll, linear-gradient(90deg, $grid-colour $thickness, $hole-colour 0) right top/ $hole-size $hole-size repeat scroll);
}

$fonts: 'Courier New', Courier, monospace;
$colours: #151515 #4b4b4b #808080 #a0a0a0 #b0b0b0 #eaeaea #c0ffff;
$grayout: 25%;
$bg-colour: list.nth($colours,1);
$dark-colour: list.nth($colours,2);
$light-colour: list.nth($colours,3);
$highlight-colour: list.nth($colours,6);
$gray-out-colour: list.nth($colours,3);
$text-colour: list.nth($colours,4);
$link-colour: list.nth($colours,7);
$text-thick-mult: 25;
$head-thick-prod: 44800px;

@mixin text($size: 16px)
{
    font-size: $size;
    font-weight: min(math.div($text-thick-mult * $size, 1px), 900);
}

@mixin header($size: 64px, $colour: $highlight-colour, $opacity: 100%, $disable-opacity: false)
{
    font-size: $size;
    font-weight: min(math.div($head-thick-prod, $size), 900);
    @if not $disable-opacity
    {
        $perc: min(math.div((100% - $grayout) * 64px , $size * 100%), 1);
        color: rgba($colour, $perc * $opacity);
    }
    @if $disable-opacity
    {
        color: $colour;
    }
}

@mixin box($theme: $light-colour)
{
    border-width: 0.25em;
    border-style: solid;
    margin: 1em 1em 1em 1em;
    border-color: $theme;
}

@mixin port($percentage: 90)
{
    max-width: min($percentage*1vw,$percentage*1vh);
    margin-inline: auto;
}

@mixin fit()
{
    min-width: 100%;
    min-height: 100%;
    width: fit-content;
    height: fit-content;
}

.gray-out
{
    color: rgba($gray-out-colour,100% - $grayout);
}

div.title, .codename
{
    a
    {
        text-decoration: none;
        @include header();
        transition: 500ms cubic-bezier(0.19, 1, 0.22, 1) color;
    }
    a:hover
    {
        @include header(64px, $highlight-colour, 100%, true);
    }
    a:not(& a)
    {
        color:$link-colour;
    }
}

div.title
{
    @include text(32px);
}

.codename
{
    @include header();
    display: inline;
}

body
{
    color: $text-colour;
    font-family: $fonts;
    width: 100%;
    height: 100%;
    margin: 0;
}
html
{
    height: 100%;
    width: 100%;
    margin: 0;
}
.bg
{
    background: background-grid(9px, 10px, $bg-colour, transparent);
    animation: rand-colours-bw 100s cubic-bezier(0.445, 0.05, 0.55, 0.95) infinite;
    z-index: -1;
}

.layerer
{
    @include fit();
    z-index: 0;
    height: 100%;
    width: 100%;
    
}

.main-wrapper
{
    @include fit();
    position: relative;
    > * 
    {
        @include fit();
        position: absolute;
    }
}

.code-expl
{
    @extend .gray-out;
    @include header(32px, $gray-out-colour, 75%);
    display: inline;
}

div.post-box
{
    @include box;
    @include port;
    @include text;
}

div.post-desc
{
    @include box($theme: $dark-colour);
}

img.proj-ill
{
    @include port(30);
}
